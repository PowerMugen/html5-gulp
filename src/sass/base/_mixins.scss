@charset "UTF-8";

// Mixins for sass project
@mixin create-hexa($size, $background) {
  background-color: $background;
  display: inline-block;
  height: $size;
  margin: 0 $size * .29;
  position: relative;
  width: $size * .58;

  &::before,
  &::after {
    background-color: inherit;
    content: '';
    display: block;
    height: $size;
    position: absolute;
    transform-origin: 50% 50%;
    width: $size * .58;
  }

  &::before {
    transform: rotate(60deg);
  }

  &::after {
    transform: rotate(-60deg);
  }

  .hexalign {
    bottom: 0;
    height: 100%;
    left: -$size * .30;
    position: absolute;
    right: -$size * .30;
    text-align: center;
    top: 0;
    z-index: 1;

    &::before {
      content: '';
      display: inline-block;
      height: 100%;
      vertical-align: middle;
    }

    >div {
      display: inline-block;
      max-width: $size * 1.15;
      vertical-align: middle;
    }

  }

}

//center block
@mixin centered-auto {
  margin: {
    left: auto;
    right: auto;
  }
}

// font-size
@mixin font-size-root($size: 14) {
  font-size: $size + px;
  font-size: ($size / 10) + rem;
}

// create pseudo element
@mixin pseudo($display: block, $pos: absolute, $content: '') {
  content: $content;
  display: $display;
  position: $pos;
}

// grids
@mixin creategrid($columns, $name: grid) {
  @for $i from 1 through $columns {
    .#{$name}-#{$i}-#{$columns} {
      width: (($i * 100) / $columns) * 1%;
    }
  }
}

// css triangle
@mixin css-triangle($color, $direction, $size: 6px, $height: $size, $position: absolute, $round: false) {
  @include pseudo($pos: $position);
  width: 0;
  height: 0;
  @if $round {
    border-radius: 3px;
  } @if $direction == down {
    border-left: $height solid transparent;
    border-right: $height solid transparent;
    border-top: $size solid $color;
    margin-top: 0 - round($size / 2.5);
  } @else if $direction == up {
    border-bottom: $size solid $color;
    border-left: $height solid transparent;
    border-right: $height solid transparent;
    margin-bottom: 0 - round($size / 2.5);
  } @else if $direction == right {
    border-bottom: $height solid transparent;
    border-left: $size solid $color;
    border-top: $height solid transparent;
    margin-right: -$size;
  } @else if $direction == left {
    border-bottom: $height solid transparent;
    border-right: $size solid $color;
    border-top: $height solid transparent;
    margin-left: -$size;
  }
}

// css bubble
@mixin bubble($size, $background) {
  display: inline-block;
  width: $size;
  height: $size;
  line-height: $size;
  text-align: center;
  border-radius: $size / 2;
  background-color: $background;
  overflow: hidden;

  img {
    height: $size;
    object-fit: cover;
    width: $size;
  }

}

// placeholder
@mixin input-placeholder {

  &.placeholder {
    @content;
  }

  &::placeholder {
    @content;
  }

}

// truncate
@mixin truncate($truncation-boundary) {
  max-width: $truncation-boundary;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Contain floats / clearfix
@mixin cf {

  &::before {
    content: '';
    display: table;
  }

  &::after {
    clear: both;
    content: '';
    display: table;
  }

}

// Hide from both screenreaders and browsers
@mixin hidden {
  display: none;
  visibility: hidden;
}

@mixin visible($state: 'block') {
  display: unquote($state);
  visibility: visible;
}

@mixin antialias {
  font-smoothing: antialiased;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// icons
@mixin icon-img($name, $width, $height: $width) {

  .ico-#{$name} {
    background-image: url('../images/pictos/#{$name}.png');
    background-position: center center;
    background-repeat: no-repeat;
    background-size: $width $height;
    height: $height;
    vertical-align: middle;
    width: $width;
  }

}

$rgba: rgba(0, 0, 0, .1);
$bgd: #eee;

@mixin scrollstyle($rgba: $rgba, $bgd: $bgd, $width: 8px) {

  &::-webkit-scrollbar {
    width: $width;
  }

  // Track
  &::-webkit-scrollbar-track {
    border-radius: $width / 2;
  }

  // Handle
  &::-webkit-scrollbar-thumb {
    background: $bgd;
    border-radius: $width / 2;
    box-shadow: inset 0 0 2px $rgba;
  }

  &::-webkit-scrollbar-thumb:window-inactive {
    background: $bgd;
  }

}

$color: #fff;

@mixin close-button ($size: 50px, $thick: 10px, $color: $color) {
  height: $size;
  width: $size;
  position: relative;
  box-sizing: border-box;
  line-height: $size;
  display: inline-block;

  &::before,
  &::after {
    $width: $size;
    $height: $thick;
    background-color: $color;
    content: '';
    display: block;
    height: $height;
    left: 50%;
    margin-left: -($width / 2);
    margin-top: -($height / 2);
    position: absolute;
    top: 50%;
    transform: rotate(-45deg);
    transition: all .2s ease-out;
    width: $width;
  }

  &::after {
    transform: rotate(45deg);
  }

  &:hover {

    &::before,
    &::after {
      transform: rotate(0deg);
    }

  }

}
